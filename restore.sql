--
-- NOTE:
--
-- File paths need to be edited. Search for $$PATH$$ and
-- replace it with the path to the directory containing
-- the extracted data files.
--
--
-- PostgreSQL database dump
--

-- Dumped from database version 13.13 (Debian 13.13-1.pgdg120+1)
-- Dumped by pg_dump version 13.13 (Debian 13.13-1.pgdg120+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

DROP DATABASE engvocab;
--
-- Name: engvocab; Type: DATABASE; Schema: -; Owner: buzzuser
--

CREATE DATABASE engvocab WITH TEMPLATE = template0 ENCODING = 'UTF8' LOCALE = 'en_US.utf8';


ALTER DATABASE engvocab OWNER TO buzzuser;

\connect engvocab

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: user_words; Type: TABLE; Schema: public; Owner: engvocabuser
--

CREATE TABLE public.user_words (
    user_id integer NOT NULL,
    word_id integer NOT NULL,
    learned boolean DEFAULT false NOT NULL,
    list_added boolean DEFAULT false NOT NULL,
    ctime timestamp without time zone DEFAULT now() NOT NULL,
    utime timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.user_words OWNER TO engvocabuser;

--
-- Name: users; Type: TABLE; Schema: public; Owner: engvocabuser
--

CREATE TABLE public.users (
    id bigint NOT NULL,
    full_name character varying,
    tg_id integer,
    tg_nickname character varying,
    word_of_day_subscribed boolean DEFAULT true,
    ctime timestamp without time zone DEFAULT now() NOT NULL,
    utime timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.users OWNER TO engvocabuser;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: engvocabuser
--

ALTER TABLE public.users ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: word_examples; Type: TABLE; Schema: public; Owner: engvocabuser
--

CREATE TABLE public.word_examples (
    id bigint NOT NULL,
    word_id integer NOT NULL,
    example_sentece text,
    translate_ru text,
    ctime timestamp without time zone DEFAULT now() NOT NULL,
    utime timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.word_examples OWNER TO engvocabuser;

--
-- Name: word_examples_id_seq; Type: SEQUENCE; Schema: public; Owner: engvocabuser
--

ALTER TABLE public.word_examples ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.word_examples_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: words; Type: TABLE; Schema: public; Owner: engvocabuser
--

CREATE TABLE public.words (
    id integer NOT NULL,
    word text NOT NULL,
    meaning text DEFAULT ''::text NOT NULL,
    translate_ru text DEFAULT ''::text NOT NULL,
    level text DEFAULT ''::text NOT NULL,
    ctime timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.words OWNER TO engvocabuser;

--
-- Name: words_id_seq; Type: SEQUENCE; Schema: public; Owner: engvocabuser
--

ALTER TABLE public.words ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.words_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: user_words; Type: TABLE DATA; Schema: public; Owner: engvocabuser
--

COPY public.user_words (user_id, word_id, learned, list_added, ctime, utime) FROM stdin;
\.
COPY public.user_words (user_id, word_id, learned, list_added, ctime, utime) FROM '$$PATH$$/3060.dat';

--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: engvocabuser
--

COPY public.users (id, full_name, tg_id, tg_nickname, word_of_day_subscribed, ctime, utime) FROM stdin;
\.
COPY public.users (id, full_name, tg_id, tg_nickname, word_of_day_subscribed, ctime, utime) FROM '$$PATH$$/3057.dat';

--
-- Data for Name: word_examples; Type: TABLE DATA; Schema: public; Owner: engvocabuser
--

COPY public.word_examples (id, word_id, example_sentece, translate_ru, ctime, utime) FROM stdin;
\.
COPY public.word_examples (id, word_id, example_sentece, translate_ru, ctime, utime) FROM '$$PATH$$/3062.dat';

--
-- Data for Name: words; Type: TABLE DATA; Schema: public; Owner: engvocabuser
--

COPY public.words (id, word, meaning, translate_ru, level, ctime) FROM stdin;
\.
COPY public.words (id, word, meaning, translate_ru, level, ctime) FROM '$$PATH$$/3059.dat';

--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: engvocabuser
--

SELECT pg_catalog.setval('public.users_id_seq', 1, true);


--
-- Name: word_examples_id_seq; Type: SEQUENCE SET; Schema: public; Owner: engvocabuser
--

SELECT pg_catalog.setval('public.word_examples_id_seq', 68338, true);


--
-- Name: words_id_seq; Type: SEQUENCE SET; Schema: public; Owner: engvocabuser
--

SELECT pg_catalog.setval('public.words_id_seq', 17104, true);


--
-- Name: user_words user_words_pkey; Type: CONSTRAINT; Schema: public; Owner: engvocabuser
--

ALTER TABLE ONLY public.user_words
    ADD CONSTRAINT user_words_pkey PRIMARY KEY (user_id, word_id);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: engvocabuser
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: users users_tg_id_key; Type: CONSTRAINT; Schema: public; Owner: engvocabuser
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_tg_id_key UNIQUE (tg_id);


--
-- Name: users users_tg_nickname_key; Type: CONSTRAINT; Schema: public; Owner: engvocabuser
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_tg_nickname_key UNIQUE (tg_nickname);


--
-- Name: word_examples word_examples_pkey; Type: CONSTRAINT; Schema: public; Owner: engvocabuser
--

ALTER TABLE ONLY public.word_examples
    ADD CONSTRAINT word_examples_pkey PRIMARY KEY (id);


--
-- Name: words words_pkey; Type: CONSTRAINT; Schema: public; Owner: engvocabuser
--

ALTER TABLE ONLY public.words
    ADD CONSTRAINT words_pkey PRIMARY KEY (id);


--
-- Name: user_words_user_id_learned_idx; Type: INDEX; Schema: public; Owner: engvocabuser
--

CREATE INDEX user_words_user_id_learned_idx ON public.user_words USING btree (user_id, learned);


--
-- Name: word_examples_word_id_idx; Type: INDEX; Schema: public; Owner: engvocabuser
--

CREATE INDEX word_examples_word_id_idx ON public.word_examples USING btree (word_id);


--
-- Name: words_level_idx; Type: INDEX; Schema: public; Owner: engvocabuser
--

CREATE INDEX words_level_idx ON public.words USING btree (level);


--
-- Name: user_words user_words_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: engvocabuser
--

ALTER TABLE ONLY public.user_words
    ADD CONSTRAINT user_words_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id);


--
-- Name: user_words user_words_word_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: engvocabuser
--

ALTER TABLE ONLY public.user_words
    ADD CONSTRAINT user_words_word_id_fkey FOREIGN KEY (word_id) REFERENCES public.words(id);


--
-- Name: word_examples word_examples_word_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: engvocabuser
--

ALTER TABLE ONLY public.word_examples
    ADD CONSTRAINT word_examples_word_id_fkey FOREIGN KEY (word_id) REFERENCES public.words(id);


--
-- Name: DATABASE engvocab; Type: ACL; Schema: -; Owner: buzzuser
--

GRANT ALL ON DATABASE engvocab TO engvocabuser;


--
-- PostgreSQL database dump complete
--

